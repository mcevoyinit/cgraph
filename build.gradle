buildscript {
    ext {
        kotlin_group = "org.jetbrains.kotlin"
        kotlin_version = "1.2.71"

        corda_group = "net.corda"
        corda_release_version = "4.8" //"4.6.1"

        corda_gradle_plugin_group = "net.corda.plugins"
        corda_gradle_plugin_version = "5.0.12" //"4.0.44"

        junit_group = "org.junit.jupiter"
        junit_version = "5.3.1"

        log4j_group = "org.apache.logging.log4j"
        log4j_version = "2.11.2"

        logback_group = "ch.qos.logback"
        logback_version = "1.2.3"

        ktor_group = "io.ktor"
        ktor_version = "1.2.2"
        ktor_kotlin_version = "1.3.40"

        cordapp_platform_version = 10

        braid_version = "5.0.0-RC09"
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven {
            url 'https://repo1.maven.org/maven2'
        }
        maven { url "https://jitpack.io" }
        maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases' }
    }

    dependencies {
        classpath "$kotlin_group:kotlin-gradle-plugin:$ktor_kotlin_version"
        classpath "$corda_gradle_plugin_group:cordapp:$corda_gradle_plugin_version"
        classpath "$corda_gradle_plugin_group:cordformation:$corda_gradle_plugin_version"
        classpath "$corda_gradle_plugin_group:quasar-utils:$corda_gradle_plugin_version"
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io' }
    maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda' }
    maven { url 'https://repo.gradle.org/gradle/libs-releases' }
    maven { url "https://ci-artifactory.corda.r3cev.com/artifactory/corda" }
    maven { url "https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases" }
    maven { url "https://ci-artifactory.corda.r3cev.com/artifactory/corda-lib" }
    maven { url "https://ci-artifactory.corda.r3cev.com/artifactory/corda-lib-dev" }
    maven { url "https://jitpack.io" }
    maven { url "https://ci-artifactory.corda.r3cev.com/artifactory/corda-solutions-releases" }
}

apply plugin: 'kotlin'
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'

dependencies {
    // Kotlin Dependencies
    implementation "$kotlin_group:kotlin-stdlib-jdk8:$kotlin_version"

    // Corda Development Dependencies
    cordaCompile "$corda_group:corda-core:$corda_release_version"

    // CorDapp Dependencies
    cordapp project(":cgraph-core:")
    cordapp project(":cgraph-example:")

    implementation group: 'javax.validation', name: 'validation-api', version: '1.0.0.GA'

    // Corda Deployment Dependencies
    cordaCompile "$corda_group:corda:$corda_release_version"
    cordaCompile "$corda_group:corda-node:$corda_release_version"
    cordaRuntime "$log4j_group:log4j-slf4j-impl:$log4j_version"
}

jar { exclude '**/log4j2*.xml' }

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
    kotlinOptions {
        languageVersion = "1.2"
        apiVersion = "1.2"
        jvmTarget = "1.8"
        javaParameters = true
    }
}

task deployNodes(type: net.corda.plugins.Cordform, dependsOn: ['jar']) {
    directory "./build/nodes"
    nodeDefaults {
        projectCordapp {
            deploy = false
        }
        rpcUsers = [[user: "guest", "password": "letmein", "permissions": ["ALL"]]]
    }
    node {
        name "O=Notary,L=London,C=GB"
        notary = [validating: false]
        p2pPort 10002
        rpcSettings {
            address("localhost:10003")
            adminAddress("localhost:10043")
        }
        cordapps.clear()
    }

    node {
        name "O=Lender,L=London,C=GB"
        cordapp(project("cgraph-example")) {
            config '''
                braidServerPort=9090
             '''
        }
        cordapp(project(':cgraph-core')) {
            config '''
                graphQLUrl="https://dawn-sky.eu-west-1.aws.cloud.dgraph.io"
                graphQLToken="YjNkN2EwMThjMzhjMDMzM2I1MDFmNWM3ZDE2YTI5YWM="
                graphBraidServerPort=8080
             '''
        }
        p2pPort 10004
        rpcSettings {
            address("localhost:10005")
            adminAddress("localhost:10045")
        }
    }
    node {
        name "O=Borrower,L=Berlin,C=DE"
        cordapp(project("cgraph-example")) {
            config '''
                braidServerPort=9091
             '''
        }
        cordapp(project(':cgraph-core')) {
            config '''
                graphQLUrl="https://proud-wave.eu-central-1.aws.cloud.dgraph.io"
                graphQLToken="MTgxOTkyZDcyMjcwYjg1OTE5MGRiNDQwOTUxYjgwMDc="
                graphBraidServerPort=8081
             '''
        }
        p2pPort 10008
        rpcSettings {
            address("localhost:10009")
            adminAddress("localhost:10049")
        }
    }
}